## **********************************************************************************************************************
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
library(MMR)
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
library(MMR)
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="none"))
library(MMR)
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="none"))
optim.LM
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="none"))
optim.LM
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 2
ads.model   <- 2
ads.cor     <- 0
noise.count <- 0
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = 1)
## End simulate ads & sales
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 2
ads.model   <- 2
ads.cor     <- 0
noise.count <- 0
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="none"))
optim.LM
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
optim.LM
library(MMR)
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
optim.LM
library(MMR)
MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
library(MMR)
MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
library(MMR)
MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
library(MMR)
library(MMR)
MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
library(MMR)
MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold"))
library(MMR)
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="none"))
optim.LM
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data,
cv.control = cv.control(method="k-fold", k=3))
optim.LM
optim.LM <- MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data)
library(MMR)
MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data)
library(MMR)
cv.control <- function(method="none", p=.5, times=1, k=10) {
list(method=method, p=p, times=times, k=k)
}
cv.control()
MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data)
library(MMR)
MMR.Optim(dep.var = "sales",
fixed.vars = c("Trend", "Season"), random.vars = c("ad1", "ad2"), data = ad.data)
train
library(caret)
train
createInTrainFolds
library(MMR)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control("none"))
library(MMR)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control("none"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control(method="none"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control("k-fold"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control(method="k-fold"))
library(MMR)
library(minpack.lm)
options(scipen=999, digits=2)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control(method="k-fold"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control=cv.control(method="k-fold"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control=cv.control("none"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control=cv.control("none"))
library(MMR)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control=cv.control("none"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control=cv.control(method="k-fold"))
library(caret)
?trainControl
?train
library(MMR)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control=cv.control("none"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="k-fold"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control(method="k-fold"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cv.control(method="k-fold"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="k-fold"))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="k-fold", k=2))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="k-fold", k=3))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="k-fold", k=4))
library(MMR)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data)
library(MMR)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="k-fold", k=4))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="k-fold", k=10))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=100))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 2
ads.model   <- 2
ads.cor     <- 0
noise.count <- 1
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 2
ads.model   <- 2
ads.cor     <- 0
noise.count <- 1
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 2
ads.model   <- 2
ads.cor     <- 0
noise.count <- 1
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 2
ads.model   <- 2
ads.cor     <- 0
noise.count <- 2
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 2
ads.model   <- 2
ads.cor     <- 0
noise.count <- 2
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 2
ads.model   <- 2
ads.cor     <- 0
noise.count <- 2
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
library(MMR)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data)
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 2
ads.model   <- 2
ads.cor     <- 0
noise.count <- 2
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data)
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 5
ads.model   <- 4
ads.cor     <- 0
noise.count <- 2
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 5
ads.model   <- 4
ads.cor     <- 0
noise.count <- 2
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1", "noise2"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "ad3", "ad4", "noise1", "noise2"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
data.summary[, 1:5]
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
modelsFit <-
data.frame(Param=c("Intercept",
paste0(data.summary$Param[2:nrow(data.summary)], ".coef"),
paste0(data.summary$Param[2:nrow(data.summary)], ".adstock"),
"rss.train", "rss.test"),
True=round(c(data.summary$Coef,
data.summary$Adstock[2:nrow(data.summary)],
NA, NA),2))
coef.order <- as.character(modelsFit$Param)
coef.order
optmFit <- MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
optmFit <- merge(modelsFit, optmFit, by="Param")
optmFit <- optmFit[order(match(modelsFit$Param, coef.order)).]
optmFit <- optmFit[order(match(modelsFit$Param, coef.order)), ]
optmFit
modelsFit <-
data.frame(Param=c("Intercept",
paste0(data.summary$Param[2:nrow(data.summary)], ".coef"),
paste0(data.summary$Param[2:nrow(data.summary)], ".adstock"),
"rss.train", "rss.test"),
True=round(c(data.summary$Coef,
data.summary$Adstock[2:nrow(data.summary)],
NA, NA),2))
coef.order <- as.character(modelsFit$Param)
optmFit <- MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2"), ad.data, cvControl=cv.control(method="random", times=5, p=.65))
optmFit <- merge(modelsFit, optmFit, by="Param")
optmFit <- optmFit[order(match(optmFit$Param, coef.order)), ]
optmFit
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 5
ads.model   <- 4
ads.cor     <- 0
noise.count <- 1
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
modelsFit <-
data.frame(Param=c("Intercept",
paste0(data.summary$Param[2:nrow(data.summary)], ".coef"),
paste0(data.summary$Param[2:nrow(data.summary)], ".adstock"),
"rss.train", "rss.test"),
True=round(c(data.summary$Coef,
data.summary$Adstock[2:nrow(data.summary)],
NA, NA),2))
coef.order <- as.character(modelsFit$Param)
## End simulate ads & sales
optmFit <- MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "ad3", "ad4", "noise1"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
optmFit <- merge(modelsFit, optmFit, by="Param")
optmFit <- optmFit[order(match(optmFit$Param, coef.order)), ]
optmFit
modelsFit <-
data.frame(Param=c("Intercept",
paste0(data.summary$Param[2:nrow(data.summary)], ".coef"),
paste0(data.summary$Param[2:nrow(data.summary)], ".adstock"),
"rss.train", "rss.test"),
True=round(c(data.summary$Coef,
data.summary$Adstock[2:nrow(data.summary)],
NA, NA),2))
coef.order <- as.character(modelsFit$Param)
## End simulate ads & sales
## **********************************************************************************************************************
## Run optimization
## **********************************************************************************************************************
optmFit <- MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "ad3", "ad4", "noise1"), ad.data,
cvControl=cv.control(method="random", times=5, p=.65))
optmFit <- merge(modelsFit, optmFit, by="Param", all=T)
optmFit <- optmFit[order(match(optmFit$Param, coef.order)), ]
optmFit
install.packages("roxygen2")
library(minpack.lm)
install.packages("minpack.lm")
install.packages("ggplot2")
install.packages("devtools")
install.packages("Rccp")
install.packages("parallel")
library(MMR)
options(scipen=999, digits=2)
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 5
ads.model   <- 4
ads.cor     <- 0
noise.count <- 1
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
modelsFit <-
data.frame(Param=c("Intercept",
paste0(data.summary$Param[2:nrow(data.summary)], ".coef"),
paste0(data.summary$Param[2:nrow(data.summary)], ".adstock"),
"mse.train", "mse.test"),
True=round(c(data.summary$Coef,
data.summary$Adstock[2:nrow(data.summary)],
NA, NA),2))
coef.order <- as.character(modelsFit$Param)
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "ad3"), ad.data, cvControl = cv.control(method="random", times=20, p=.7))
MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1"), ad.data, cvControl = cv.control(method="random", times=20, p=.7))
optm <- MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1"), ad.data, cvControl = cv.control(method="random", times=20, p=.7))
optm
optm[optm$Param=="ad1.adstock",]
plot(optm[optm$Param=="ad1.adstock",], optm[optm$Param=="mse.test",])
optm[optm$Param=="mse.test",]
plot(optm[optm$Param=="ad1.adstock",-1], optm[optm$Param=="mse.test",-1])
optm[optm$Param=="ad1.adstock",-1]
class(optm[optm$Param=="ad1.adstock",-1])
class(optm[optm$Param=="ad1.adstock",-1, drop=T])
as.numeric(optm[optm$Param=="ad1.adstock",-1, drop=T])
plot(as.numeric(optm[optm$Param=="ad1.adstock",-1]), as.numeric(optm[optm$Param=="mse.test",-1]))
data.summary[, 1:5]
optm <- MMR.Optim("sales", c("Trend", "Season"), c("ad1", "ad2", "noise1"), ad.data, cvControl = cv.control(method="random", times=100, p=.7))
plot(as.numeric(optm[optm$Param=="ad1.adstock",-1]), as.numeric(optm[optm$Param=="mse.test",-1]))
plot.MMR.Optim <- function(var){
plot(as.numeric(optm[optm$Param==var,-1]), as.numeric(optm[optm$Param=="mse.test",-1]))
}
plot.MMR.Optim("ad1.adstock")
plot.MMR.Optim("ad2.adstock")
plot.MMR.Optim("noise1.adstock")
install.packages("parellal")
install.packages("parallel")
?dpParallel
install.packages("doParallel")
?dpParallel
?doParallel
library(help=doParallel)
install.packages("parallel")
library(MMR)
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
years       <- 2
weeks       <- 52*years
ad.weeks    <- 52*years
ads.count   <- 5
ads.model   <- 4
ads.cor     <- 0
noise.count <- 1
ad.data <- sim.ads(weeks, trend = T, season = T, ads.count = ads.count, adstock.max = 0.8, ads.noise = noise.count)
runTime <- proc.time()
optm.LM <- MMR.Optim("sales", , c("ad1", "ad3", "ad4", "noise1"), ad.data, cvControl = cv.control(method="random", times=100, p=.7))
runTime <- proc.time() - runTime
runTime[1:3]
install.packages("multicore")
install.packages("multicore")
library(parallel)
?mclapply
library(MMR)
runTime[1:3]
library(MMR)
optm.LM <- MMR.Optim("sales", , c("ad1", "ad3", "ad4", "noise1"), ad.data, cvControl = cv.control(method="random", times=100, p=.7))
optm.LM
runTime <- proc.time()
optm.LM <- MMR.Optim("sales", , c("ad1", "ad3", "ad4", "noise1"), ad.data, cvControl = cv.control(method="random", times=100, p=.7))
runTime <- proc.time() - runTime
runTime2 <- runTime
runTime1[1:3]
runTime2[1:3]
