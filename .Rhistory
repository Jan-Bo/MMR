indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0),
indp.try    = 3
)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
rm(list=ls())
dep.var        = "sales"
indp.vars      = c("trend", "price", "ad1", "ad2", "noise1")
keep.vars      = c("trend", "price")
adstock.vars   = c("ad1", "ad2", "noise1")
adstock.min    = c(ad1=0 , ad2=.5, noise1=0)
adstock.max    = numeric()#c(ad1=.1, ad2=1, noise1=.3)
transform.vars = c(price="power", ad1="PowerInv", noise1="power")
transform.min  = c(price=-Inf   , ad1=0         , noise1=0.01   )
transform.max  = c(price=-0.01  , ad1=Inf       , noise1=1      )
transform.vars = c(price="power", ad1="PowerInv", noise1="power")
transform.min  = c(price=-Inf   , ad1=0         , noise1=0.01   )
transform.max  = c(price=-0.01  , ad1=Inf       , noise1=1      )
mapply(
function(tr.var, tr.min, tr.max) {
tr.var <- tolower(tr.var)
if(tr.var %in% c("identity", "log") | tr.min==tr.max) {
NA
} else {
if(tr.var=="power") {
max(min(1, tr.max), tr.min)
} else if(tr.var=="powerinv") {
min(max(0, tr.min), tr.max)
}
}
},
transform.vars, transform.min, transform.max)
transform.vars = c(price="power", ad1="PowerInv", noise1="power", ad2="log")
transform.min  = c(price=-Inf   , ad1=0         , noise1=0.01   )
transform.max  = c(price=-0.01  , ad1=Inf       , noise1=1      )
mapply(
function(tr.var, tr.min, tr.max) {
tr.var <- tolower(tr.var)
if(tr.var %in% c("identity", "log") | tr.min==tr.max) {
NA
} else {
if(tr.var=="power") {
max(min(1, tr.max), tr.min)
} else if(tr.var=="powerinv") {
min(max(0, tr.min), tr.max)
}
}
},
transform.vars, transform.min, transform.max)
transform.vars = c(price="power", ad1="PowerInv", noise1="power", ad2="log")
transform.min  = c(price=-Inf   , ad1=0         , noise1=0.01   , ad2=1)
transform.max  = c(price=-0.01  , ad1=Inf       , noise1=1      , ad2=1)
mapply(
function(tr.var, tr.min, tr.max) {
tr.var <- tolower(tr.var)
if(tr.var %in% c("identity", "log") | tr.min==tr.max) {
NA
} else {
if(tr.var=="power") {
max(min(1, tr.max), tr.min)
} else if(tr.var=="powerinv") {
min(max(0, tr.min), tr.max)
}
}
},
transform.vars, transform.min, transform.max)
transform.vars = c(price="power", ad1="PowerInv", noise1="power", ad2="log")
transform.min  = c(price=-Inf   , ad1=0         , noise1=0.01   , ad2=1)
transform.max  = c(price=-0.01  , ad1=Inf       , noise1=1      , ad2=1)
temp <-
mapply(
function(tr.var, tr.min, tr.max) {
tr.var <- tolower(tr.var)
if(tr.var %in% c("identity", "log") | tr.min==tr.max) {
NA
} else {
if(tr.var=="power") {
max(min(1, tr.max), tr.min)
} else if(tr.var=="powerinv") {
min(max(0, tr.min), tr.max)
}
}
},
transform.vars, transform.min, transform.max)
temp[!is.na(temp)]
transform.vars = c(price="power", ad1="PowerInv", noise1="power", ad2="log", ad3="NegExp")
transform.min  = c(price=-Inf   , ad1=0         , noise1=0.01   , ad2=1, ad3=0)
transform.max  = c(price=-0.01  , ad1=Inf       , noise1=1      , ad2=1, ad3=1)
temp <-
mapply(
function(tr.var, tr.min, tr.max) {
tr.var <- tolower(tr.var)
if(tr.var %in% c("identity", "log") | tr.min==tr.max) {
NA
} else {
if(tr.var=="power") {
max(min(1, tr.max), tr.min)
} else if(tr.var=="powerinv") {
min(max(0, tr.min), tr.max)
} else if(tr.var=="negexp") {
min(max(.005, tr.min), tr.max)
}
}
},
transform.vars, transform.min, transform.max)
temp[!is.na(temp)]
transform.vars = c(price="power", ad1="PowerInv", noise1="power", ad2="log", ad3="NegExp")
transform.min  = c(price=-Inf   , ad1=0         , noise1=0.01   , ad2=1, ad3=-1)
transform.max  = c(price=-0.01  , ad1=Inf       , noise1=1      , ad2=1, ad3=0)
temp <-
mapply(
function(tr.var, tr.min, tr.max) {
tr.var <- tolower(tr.var)
if(tr.var %in% c("identity", "log") | tr.min==tr.max) {
NA
} else {
if(tr.var=="power") {
max(min(1, tr.max), tr.min)
} else if(tr.var=="powerinv") {
min(max(0, tr.min), tr.max)
} else if(tr.var=="negexp") {
min(max(.005, tr.min), tr.max)
}
}
},
transform.vars, transform.min, transform.max)
temp[!is.na(temp)]
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
rm(list=ls())
options(scipen=999, digits=2)
## **********************************************************************************************************************
## Simulate ads & sales
## **********************************************************************************************************************
set.seed(234)
ad.data <- sim.ads(weeks       = 3*52,
trend       = T,
season      = T,
ads.count   = 3,
ads.noise   = 1,
adstock.max = 0.8,
sequantial  = F)
ad.data <- sim.ads(weeks       = 3*52,
trend       = T,
season      = T,
ads.count   = 3,
ads.noise   = 1,
adstock.max = 0.8,
sequantial  = F)
training   <- seq(from = 1, nrow(ad.data))
data.train <- ad.data[training, ]
trials <- createInTrainFolds(data.train, k=4)
indp.vars <- c("Trend", "Season", paste0("ad", 1:3), paste0("noise", 1:1))
keep.vars <- c("Trend", "Season")
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
library(MMR)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=1, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
# Optimize with Levenberg-Marquardt algorithm
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
keep.vars   = c("Trend", "Season"),
adstock.vars = c("ad1"),
transform.vars = c(noise1="PowerInv", ad1="power", ad2="NegExp"),
transform.min = c(ad1=.5, noise1=0),
transform.max = c(ad1=1, noise1=0),
coef.min    = c(ad1=0, noise1=0),
indp.try    = 3
)
