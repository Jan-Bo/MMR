coef(z)[grepl(paste0("\\.", coefType, "$"), names(coef(z)))]
})
},
optm.LM.noTransform, optm.LM.Power, optm.LM.PowerInv)
}
printCoef("power")
printCoef <- function(coefType="coef") {
mapply(
function(x, y, z) {
list("No Adstock" =
if(class(x)=="nls") {
list(coef(x)[grepl(paste0("\\.", coefType, "$"), names(coef(x)))])
},
"Power" =
if(class(y)=="nls") {
list(coef(y)[grepl(paste0("\\.", coefType, "$"), names(coef(y)))])
},
"Power Inv" =
if(class(z)=="nls") {
list(coef(z)[grepl(paste0("\\.", coefType, "$"), names(coef(z)))])
})
},
optm.LM.noTransform, optm.LM.Power, optm.LM.PowerInv)
}
printCoef("power")
printCoef <- function(coefType="coef") {
mapply(
function(x, y, z) {
list("No Adstock" =
if(class(x)=="nls") {
coef(x)[grepl(paste0("\\.", coefType, "$"), names(coef(x)))]
},
"Power" =
if(class(y)=="nls") {
coef(y)[grepl(paste0("\\.", coefType, "$"), names(coef(y)))]
},
"Power Inv" =
if(class(z)=="nls") {
coef(z)[grepl(paste0("\\.", coefType, "$"), names(coef(z)))]
})
},
optm.LM.noTransform, optm.LM.Power, optm.LM.PowerInv)
}
printCoef("power")
printCoef <- function(coefType="coef") {
mapply(
function(x, y, z) {
list("No Adstock" =
if(class(x)=="nls") {
coef(x)[grepl(paste0("\\.", coefType, "$"), names(coef(x)))]
},
"Power" =
if(class(y)=="nls") {
coef(y)[grepl(paste0("\\.", coefType, "$"), names(coef(y)))]
},
"Power Inv" =
if(class(z)=="nls") {
coef(z)[grepl(paste0("\\.", coefType, "$"), names(coef(z)))]
})
},
optm.LM.noTransform, optm.LM.Power, optm.LM.PowerInv,
SIMPLIFY = F)
}
printCoef("power")
printCoef <- function(coefType="coef") {
mapply(
function(x, y, z) {
list("No Adstock" =
if(class(x)=="nls") {
coef(x)[grepl(paste0("\\.", coefType, "$"), names(coef(x)))]
},
"Power" =
if(class(y)=="nls") {
coef(y)[grepl(paste0("\\.", coefType, "$"), names(coef(y)))]
},
"Power Inv" =
if(class(z)=="nls") {
coef(z)[grepl(paste0("\\.", coefType, "$"), names(coef(z)))]
})
},
optm.LM.noTransform, optm.LM.Power, optm.LM.PowerInv,
SIMPLIFY = F)
}
printCoef("power")
printCoef("adstock")
printCoef("coef")
transform <- rep("NegExp", length(indp.vars) - length(keep.vars))
names(transform) <- indp.vars[!(indp.vars %in% keep.vars)]
optm.LM.PowerInv <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
transform <- rep("powerInv", length(indp.vars) - length(keep.vars))
names(transform) <- indp.vars[!(indp.vars %in% keep.vars)]
optm.LM.PowerInv <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
transform <- rep("NegExp", length(indp.vars) - length(keep.vars))
names(transform) <- indp.vars[!(indp.vars %in% keep.vars)]
optm.LM.NegExp <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
transform <- rep("NegExp", length(indp.vars) - length(keep.vars))
names(transform) <- indp.vars[!(indp.vars %in% keep.vars)]
optm.LM.NegExp <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "port",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
optm.LM.NegExp
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars, "ad10"),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
as.name(ad.data)
get(ad.data)
ad.data
as.name(ad.data)
as.name(get(ad.data))
deparse(substitute(ad.data))
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars, "ad10"),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
library(MMR)
exists(ad.data)
exists(x = "ad.data")
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars, "ad10"),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.traind,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars, "ad10"),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.traind,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars, "ad10"),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.traind,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars, "ad10"),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend2=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars, "ad10"),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend2=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars, "ad10"),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend2=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars, "ad10"),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend2=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend2=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend2=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend2=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
library(MMR)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend2=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
transform
transform <- rep("power", length(indp.vars) - length(keep.vars))
names(transform) <- indp.vars[!(indp.vars %in% keep.vars)]
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
optm.LM.Power <-
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
optm.LM.Power
library(MMR)
library(MMR)
rm(list=ls())
options(scipen=999, digits=2)
set.seed(8)
ad.data <- sim.ads(weeks       = 2*52,
trend       = T,
season      = T,
ads.count   = 4,
ads.noise   = 2,
adstock.max = 0.8,
sequantial  = F)
training   <- seq(from = 1, nrow(ad.data))
data.train <- ad.data[training, ]
trials <- createInTrainSamples(data.train, 10, function() runif(1, .65, .75))
indp.vars <- c("Trend", "Season", paste0("ad", 1:4), paste0("noise", 1:2))
keep.vars <- c("Trend", "Season")
transform <- rep("log", length(indp.vars) - length(keep.vars))
names(transform) <- indp.vars[!(indp.vars %in% keep.vars)]
transform
optm.LM.Log <-
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
optm.LM.Log
transform <- rep("power", length(indp.vars) - length(keep.vars))
names(transform) <- indp.vars[!(indp.vars %in% keep.vars)]
optm.LM.Power <-
MMR.Optim(dep.var     = "sales",
indp.vars   = c(indp.vars),
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials
#indp.try    = function() sample(10:15, 1)
)
optm.LM.Power
optm.LM.pred <- MMR.Predict(optm.LM.Power, newdata = ad.data)
c("MAPE"=mean(abs(optm.LM.pred[training]/ad.data$sales[training]-1)))
actual <-
ggplot(ad.data, aes(week, sales)) +
geom_line(colour="darkblue", alpha=.75, size=1) +
ggtitle("Actual vs. Predicted (LM Method)") + ylab("Sales") + xlab("Weeks") +
theme_bw() +
theme(plot.title = element_text(size=20, face="bold", vjust=1.5),
axis.title.x = element_text(vjust=-0.35))
actual +
geom_line(aes(week, optm.LM.pred), colour="green3", alpha=.5, size=1.5)
set.seed(8)
ad.data <- sim.ads(weeks       = 3*52,
trend       = T,
season      = T,
ads.count   = 8,
ads.noise   = 4,
adstock.max = 0.8,
sequantial  = F)
set.seed(0)
ad.data <- sim.ads(weeks       = 3*52,
trend       = T,
season      = T,
ads.count   = 8,
ads.noise   = 4,
adstock.max = 0.8,
sequantial  = F)
write.csv(ad.data, "C:/Users/gmohanna/Documents/Temp/ad.data.csv")
training   <- seq(from = 1, nrow(ad.data))
data.train <- ad.data[training, ]
trials <- createInTrainSamples(data.train, 50, function() runif(1, .65, .75))
indp.vars <- c("Trend", "Season", paste0("ad", 1:8), paste0("noise", 1:4))
keep.vars <- c("Trend", "Season")
optm.LM.noTransform <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
#transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
indp.try    = function() sample(6:10, 1)
)
optm.LM.pred <- MMR.Predict(optm.LM.noTransform, newdata = ad.data, combine = F)
write.csv(optm.LM.pred, "C:/Users/gmohanna/Documents/Temp/ad.data.predicted.csv")
optm.LM.pred <- MMR.Predict(optm.LM.noTransform, newdata = ad.data)
c("MAPE"=mean(abs(optm.LM.pred[training]/ad.data$sales[training]-1)))
transform <- rep("powerInv", length(indp.vars) - length(keep.vars))
names(transform) <- indp.vars[!(indp.vars %in% keep.vars)]
optm.LM.PowerInv <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
indp.try    = function() sample(6:10, 1)
)
optm.LM.PowerInv
transform
optm.LM.PowerInv <-
MMR.Optim(dep.var     = "sales",
indp.vars   = indp.vars,
min.adstock = c(Trend=0, Season=0),
max.adstock = c(Trend=0, Season=0),
keep.vars   = c("Trend", "Season"),
transform   = transform,
data        = data.train,
algorithm   = "LM",
cvTrials    = trials,
indp.try    = function() sample(6:10, 1)
)
optm.LM.PowerInv
optm.LM.pred <- MMR.Predict(optm.LM.PowerInv, newdata = ad.data, combine = F)
write.csv(optm.LM.pred, "C:/Users/gmohanna/Documents/Temp/ad.data.predicted.csv")
optm.LM.pred <- MMR.Predict(optm.LM.PowerInv, newdata = ad.data)
c("MAPE"=mean(abs(optm.LM.pred[training]/ad.data$sales[training]-1)))
optm.LM.pred <- MMR.Predict(optm.LM.PowerInv, newdata = ad.data)
write.csv(optm.LM.pred, "C:/Users/gmohanna/Documents/Temp/ad.data.predicted1.csv")
c("MAPE"=mean(abs(optm.LM.pred[training]/ad.data$sales[training]-1)))
grid.arrange(MMR.Coef.Plot(optm.LM.PowerInv, paste0("ad", 1:9)),
MMR.Adstock.Plot(optm.LM.PowerInv, paste0("ad", 1:9)),
ncol=2)
grid.arrange(MMR.Coef.Plot(optm.LM.PowerInv, paste0("ad", 1:9), "MSE"),
MMR.Adstock.Plot(optm.LM.PowerInv, paste0("ad", 1:9), "MSE"),
ncol=2)
trueContrib <- data.summary$Contribution
names(trueContrib) <- data.summary$Param
trueContrib; MMR.Contributions(optm.LM, T, "MSE")[names(trueContrib)]
trueContrib <- data.summary$Contribution
names(trueContrib) <- data.summary$Param
trueContrib; MMR.Contributions(optm.LM.PowerInv, T, "MSE")[names(trueContrib)]
library(MMR)
rm(list=ls())
options(scipen=999, digits=2)
set.seed(234)
ad.data <- sim.ads(weeks       = 3*52,
trend       = T,
season      = T,
ads.count   = 8,
ads.noise   = 4,
adstock.max = 0.8,
sequantial  = F)
ad.data <- sim.ads(weeks       = 3*52,
trend       = T,
season      = T,
ads.count   = 8,
ads.noise   = 4,
adstock.max = 0.8,
sequantial  = F)
training   <- seq(from = 1, nrow(ad.data))
data.train <- ad.data[training, ]
createInTrainFolds(data.train, k=2)
trials <- createInTrainSamples(data.train, 50, function() runif(1, .65, .75))
indp.vars <- c("Trend", "Season", paste0("ad", 1:8), paste0("noise", 1:4))
keep.vars <- c("Trend", "Season")
