{
    "contents" : "---\ntitle: \"Contributions & Multiple Versions of Truth\"\nauthor: \"Gabriel Mohanna\"\ndate: \"October 31, 2014\"\noutput: html_document\n---\n\nMarekting Mix models suffer from a rampant problem. The quality of the models are judged skwelly by the amount of contributions marketing gets allocated. For those who don't know, contributions are the incremental uplifts due to marketing on top of normal sales. In layman's terms, models are evaluated by favorable interpratation to marketing without looking at the statistical fit or predictive power. Worse yet is that looking at the wrong statistical measure can give a sense of \"false\" confidence that can have disastrous consequences to businesses.\n\nA previous client of mine has recently decided to take MMM internally. They already had a model and were proud of it. $R^2$ was 0.98 they said. I told them that this is definitly a great achievement but they must now look at the contributions. A month passed by and I met my previous client again to review their progress. They were at a loss. They realized that the contribtuions can have a wide range of values throughout all the models all of which with a .98 $R^2$ and above. \"We realized that there are multiple versions of truth.\"\n\nObviously, $R^2$ is a not a good measure of statistical fit. Not only does $R^2$ increase with more variables in a model, it is also evaluated against training data and it opens a huge opportunity of overfitting. \n\nTo illistrate how contributions can be just about anything, we simulate some data. The data contain 20 weeks, i.e. observations, a trend variable and two ad campaigns.\n```{r DataSim}\n# Set weeks\nweeks <- 1:200\n\n# Generate marketing ads randomly\nset.seed(3599)\ntrend <- 1:length(weeks)\nad1 <- pmax(runif(length(weeks), -30, 30), 0)\n\n# Set coefficient estimates\nintercept.coef <- 10\ntrend.coef <- 4.8\nad1.coef <- 30; ad1.adstock <- .33\n\n# Calclate total sales\nsales <- \n    intercept.coef * rep(1, length(weeks))+ \n    trend.coef * weeks +\n    ad1.coef * as.numeric(filter(ad1, ad1.adstock, method=\"recursive\")) +\n    rnorm(n = length(weeks), mean = 0, sd = 3)\n\n# Set up data frame\nad.data <- data.frame(week=weeks, trend=weeks, ad1=ad1, sales=sales)\n```\n```{r PlotData, echo=F}\nbarplot(ad1, col = \"orange\", ylim = c(0, max(sales)/10), axes = F, main=\"Sales vs. Advertising\")\npar(new=T)\nplot(x = weeks, y = sales, type=\"l\", col = \"blue\", lwd = 1.5, ylim = c(0, max(sales)), frame=F, axes = F)\naxis(side = 1, labels = NA)\naxis(side = 2, labels = NA)\n```\n\nWhen we graph the data, one thing is immediatly clear: all variables have a good and positive relationship to sales.\n```{r corrplot.mixed}\nlibrary(corrplot)\n#corrplot.mixed(cor(ad.data[, c(\"sales\", \"trend\", \"ad1\")]))\n```\n\n```{r model.ini}\nresults <- \n    matrix(nrow = 10, ncol = 4, \n           dimnames = list(c(seq(0, .9, .10)), \n                           c(\"Coef\", \"pVal\", \"Contrib\", \"R_Sq\")))\n\nfor(ad1.ctr in 0:9) {\n    ad1.adstock <- ad1.ctr/10\n    ad1 <- as.numeric(filter(ad.data$ad1, ad1.ctr/10, method=\"recursive\"))\n    \n    modFit <- lm(sales~trend+ad1)\n    \n    results[ad1.ctr+1, 1] <-\n        round(modFit$coefficients[\"ad1\"], 2)\n    results[ad1.ctr+1, 2] <-\n        round(summary(modFit)$coefficients[,4][\"ad1\"], 3)\n    results[ad1.ctr+1, 3] <- \n        round(modFit$coefficients[\"ad1\"], 2)\n    results[ad1.ctr+1, 4] <- \n        round(summary(modFit)$r.squared, 2)\n}\n\nresults\n\nplot(x = rownames(results), y = results[, \"Contrib\"])\nplot(x = rownames(results), y = results[, \"R_Sq\"])\n```\n\n\n\n, see Marketing Mix Models Explained with R for an explination\n\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n```{r}\nsummary(cars)\n```\n\nYou can also embed plots, for example:\n\n```{r, echo=FALSE}\nplot(cars)\n```\n\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n",
    "created" : 1414785205802.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2167077381",
    "id" : "BCB441D0",
    "lastKnownWriteTime" : 1414786791,
    "path" : "~/OneDrive/Work Files/R Libraries/Contributions & Multiple Versions of Truth/Contributions & Multiple Versions of Truth.Rmd",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled2"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}