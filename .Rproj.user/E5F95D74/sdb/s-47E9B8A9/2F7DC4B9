{
    "contents" : "library(MMR)\n\nrm(list=ls())\n\noptions(scipen=999, digits=2)\n\n## **********************************************************************************************************************\n## Simulate ads & sales\n## **********************************************************************************************************************\nset.seed(234)\nad.data <- sim.ads(weeks       = 3*52, \n                   trend       = T, \n                   season      = T, \n                   ads.count   = 8, \n                   ads.noise   = 4,\n                   adstock.max = 0.8,\n                   sequantial  = F)\n\nwrite.csv(ad.data, \"C:/Users/gmohanna/Documents/Temp/ad.data.csv\")\n## End simulate ads & sales\n\n\n## **********************************************************************************************************************\n## Run optimization\n## **********************************************************************************************************************\n# Split data into training vs. validation\ntraining   <- seq(from = 1, ceiling(0.9*nrow(ad.data)))\ntraining   <- seq(from = 1, nrow(ad.data))\nvalidate   <- seq(from = ceiling(0.9*nrow(ad.data))+1, nrow(ad.data))\ndata.train <- ad.data[training, ]\n\n# Generate inTrain trials\ntrials <- createInTrainSamples(data.train, 50, function() runif(1, .65, .75))\ntrials <- createInTrainFolds(data.train, k=2)\n\nindp.vars <- c(\"Trend\", \"Season\", paste0(\"ad\", 1:8), paste0(\"noise\", 1:4))\nkeep.vars <- c(\"Trend\", \"Season\")\n\n# Optimize with Levenberg-Marquardt algorithm\noptm.LM.noTransform <- \n    MMR.Optim(dep.var     = \"sales\",\n              indp.vars   = indp.vars,\n              min.adstock = c(Trend=0, Season=0),\n              max.adstock = c(Trend=0, Season=0),\n              keep.vars   = c(\"Trend\", \"Season\"), \n              #transform   = transform,\n              data        = data.train,\n              algorithm   = \"LM\",\n              cvTrials    = trials,\n              indp.try    = function() sample(6:10, 1)\n    )\n\ntransform <- rep(\"power\", length(indp.vars) - length(keep.vars))\nnames(transform) <- indp.vars[!(indp.vars %in% keep.vars)]\noptm.LM.Power <- \n    MMR.Optim(dep.var     = \"sales\",\n              indp.vars   = c(indp.vars),\n              min.adstock = c(Trend=0, Season=0),\n              max.adstock = c(Trend=0, Season=0),\n              keep.vars   = c(\"Trend\", \"Season\"), \n              transform   = transform,\n              data        = data.train,\n              algorithm   = \"LM\",\n              cvTrials    = trials\n              #indp.try    = function() sample(10:15, 1)\n    )\n\ntransform <- rep(\"powerInv\", length(indp.vars) - length(keep.vars))\nnames(transform) <- indp.vars[!(indp.vars %in% keep.vars)]\noptm.LM.PowerInv <- \n    MMR.Optim(dep.var     = \"sales\",\n              indp.vars   = indp.vars,\n              min.adstock = c(Trend=0, Season=0),\n              max.adstock = c(Trend=0, Season=0),\n              keep.vars   = c(\"Trend\", \"Season\"), \n              transform   = transform,\n              data        = data.train,\n              algorithm   = \"LM\",\n              cvTrials    = trials,\n              indp.try    = function() sample(6:10, 1)\n    )\n\ntransform <- rep(\"NegExp\", length(indp.vars) - length(keep.vars))\nnames(transform) <- indp.vars[!(indp.vars %in% keep.vars)]\noptm.LM.NegExp <- \n    MMR.Optim(dep.var     = \"sales\",\n              indp.vars   = indp.vars,\n              min.adstock = c(Trend=0, Season=0),\n              max.adstock = c(Trend=0, Season=0),\n              keep.vars   = c(\"Trend\", \"Season\"), \n              transform   = transform,\n              data        = data.train,\n              algorithm   = \"LM\",\n              cvTrials    = trials\n              #indp.try    = function() sample(10:15, 1)\n    )\n\ntransform <- rep(\"log\", length(indp.vars) - length(keep.vars))\nnames(transform) <- indp.vars[!(indp.vars %in% keep.vars)]\noptm.LM.Log <- \n    MMR.Optim(dep.var     = \"sales\",\n              indp.vars   = c(indp.vars),\n              min.adstock = c(Trend=0, Season=0),\n              max.adstock = c(Trend=0, Season=0),\n              keep.vars   = c(\"Trend\", \"Season\"), \n              transform   = transform,\n              data        = data.train,\n              algorithm   = \"LM\",\n              cvTrials    = trials\n              #indp.try    = function() sample(10:15, 1)\n    )\n\nprintCoef <- function(coefType=\"coef\") {\n    mapply(\n        function(x, y, z) {\n            list(\"No Adstock\" = \n                     if(class(x)==\"nls\") {\n                         coef(x)[grepl(paste0(\"\\\\.\", coefType, \"$\"), names(coef(x)))]\n                     },\n                 \"Power\" =\n                     if(class(y)==\"nls\") {\n                         coef(y)[grepl(paste0(\"\\\\.\", coefType, \"$\"), names(coef(y)))]\n                     },\n                 \"Power Inv\" = \n                     if(class(z)==\"nls\") {\n                         coef(z)[grepl(paste0(\"\\\\.\", coefType, \"$\"), names(coef(z)))]\n                     })\n        }, \n        optm.LM.noTransform, optm.LM.Power, optm.LM.PowerInv,\n        SIMPLIFY = F)\n}\n\nprintCoef(\"power\")\nprintCoef(\"adstock\")\nprintCoef(\"coef\")\n\n(test <- MMR.Optim(dep.var     = \"sales\",\n          indp.vars   = c(\"Trend\", \"Season\", \"ad1\", \"ad2\"),\n          min.adstock = c(Trend=0, Season=0),\n          max.adstock = c(Trend=0, Season=0),\n          keep.vars   = c(\"Trend\", \"Season\"), \n          transform   = c(ad1=\"negExp\", ad2=\"negExp\"),\n          data        = data.train,\n          algorithm   = \"LM\",\n          cvTrials    = trials\n          #indp.try    = function() sample(10:15, 1)\n))\n\n# Predict & plot\noptm.LM.pred <- MMR.Predict(optm.LM.PowerInv, newdata = ad.data)\nwrite.csv(optm.LM.pred, \"C:/Users/gmohanna/Documents/Temp/ad.data.predicted1.csv\")\n# Overall MAPE\nc(\"MAPE\"=mean(abs(optm.LM.pred[training]/ad.data$sales[training]-1)))\nc(\"In-Sample\"=mean(abs(optm.LM.pred[training]/ad.data$sales[training]-1)),\n  \"Out-of-Sample\"=mean(abs(optm.LM.pred[validate]/ad.data$sales[validate]-1)))\n\nactual <- \n    ggplot(ad.data, aes(week, sales)) + \n    geom_line(colour=\"darkblue\", alpha=.75, size=1) +     \n    ggtitle(\"Actual vs. Predicted (LM Method)\") + ylab(\"Sales\") + xlab(\"Weeks\") +\n    theme_bw() + \n    theme(plot.title = element_text(size=20, face=\"bold\", vjust=1.5),\n          axis.title.x = element_text(vjust=-0.35))\n\nactual +\n    geom_line(aes(week, optm.LM.pred), colour=\"green3\", alpha=.5, size=1.5)\n\nactual + \n    geom_line(aes(week, c(optm.LM.pred[training], rep(NA, length(validate)))), colour=\"green3\", alpha=.5, size=1.5) +\n    geom_line(aes(week, c(rep(NA, length(training)), optm.LM.pred[validate])), colour=\"darkorange\", alpha=.5, size=1.5, na.rm=F)\n\n    \n# Plot all models\noptm.LM.preds <- MMR.Predict(optm.LM, newdata = ad.data, combine = F)\nplot(x=ad.data$week, y=ad.data$sales, \n     type=\"l\", col=\"darkblue\", lwd = 2, \n     main=\"Actual vs. Predicted Models\", ylab=\"Sales\", xlab=\"Weeks\",\n     frame=F)\nfor(i in 1:length(optm.LM)) {\n    if(!is.na(optm.LM.preds[[i]][1]))\n        lines(x=ad.data$week, y=optm.LM.preds[[i]], col=\"green3\")\n}\nlines(x=ad.data$week, y=ad.data$sales, type=\"l\", col=\"darkblue\", lwd = 2)\n\n# View coefficients & adstocks\ngrid.arrange(MMR.Coef.Plot(optm.LM.PowerInv, paste0(\"ad\", 1:9)), \n             MMR.Adstock.Plot(optm.LM.PowerInv, paste0(\"ad\", 1:9)), \n             ncol=2)\ngrid.arrange(MMR.Coef.Plot(optm.LM.PowerInv, paste0(\"ad\", 1:9), \"MSE\"), \n             MMR.Adstock.Plot(optm.LM.PowerInv, paste0(\"ad\", 1:9), \"MSE\"), \n             ncol=2)\n\ngrid.arrange(MMR.Coef.Plot(optm.LM, paste0(\"noise\", 1:9)), \n             MMR.Adstock.Plot(optm.LM, paste0(\"noise\", 1:9)), \n             ncol=2)\ngrid.arrange(MMR.Coef.Plot(optm.LM, paste0(\"noise\", 1:9), \"MSE\"), \n             MMR.Adstock.Plot(optm.LM, paste0(\"noise\", 1:9), \"MSE\"), \n             ncol=2)\n\ndata.summary[, 1:5]\n\n# View contributions\ntrueContrib <- data.summary$Contribution\nnames(trueContrib) <- data.summary$Param\n\ntrueContrib; MMR.Contributions(optm.LM.PowerInv, T, \"MSE\")[names(trueContrib)]\n\nround(trueContrib/sum(ad.data$sales), 3); round(MMR.Contributions(optm.LM, T, \"MSE\")[names(trueContrib)]/sum(optm.LM.pred), 3)\n\n# Optimize with Port algorithm\noptm.PR <- MMR.Optim(dep.var     = \"sales\",\n                     indp.vars   = indp.vars,\n                     min.adstock = c(Trend=0, Season=0),\n                     max.adstock = c(Trend=0, Season=0),\n                     keep.vars   = c(\"Trend\", \"Season\"), \n                     data        = ad.data,\n                     algorithm   = \"port\",\n                     cvTrials    = trials, \n                     indp.try    = function() sample(4:6, 1))\n\n# Predict & plot\noptm.PR.preds <- MMR.Predict(optm.PR, type=\"full\", combine = F)\noptm.PR.pred  <- MMR.Predict(optm.PR, type=\"full\", combine = T)\n\npar(mfrow=c(1,1))\nplot (x=ad.data$week, y=optm.PR.pred , \n      type=\"l\", col=\"darkorange\", lwd=3, \n      main=\"Actual vs. Predicted\", ylab=\"Sales\", xlab=\"Weeks\",\n      ylim=c(min(ad.data$sales, optm.PR.pred), \n             max(ad.data$sales, optm.PR.pred)), \n      frame=F)\nlines(x=ad.data$week, y=ad.data$sales, type=\"l\", col=\"darkblue\"   , lwd=2)\n\nplot(x=ad.data$week, y=ad.data$sales, \n     type=\"l\", col=\"darkblue\", lwd = 2, \n     main=\"Actual vs. Predicted Models\", ylab=\"Sales\", xlab=\"Weeks\",\n     frame=F)\nfor(i in 1:50) {\n    if(!is.na(optm.PR.preds[[i]][1]))\n        lines(x=ad.data$week, y=optm.PR.preds[[i]], col=\"darkorange\")\n}\nlines(x=ad.data$week, y=ad.data$sales, type=\"l\", col=\"darkblue\", lwd = 2)\n\n\n# View adstocks\ndata.summary[, 1:5]\n\ngrid.arrange(MMR.Adstock.Plot(optm.LM, paste0(\"ad\", 1:3)) + ggtitle(label = \"LM Method\"), \n             MMR.Adstock.Plot(optm.PR, paste0(\"ad\", 1:3)) + ggtitle(label = \"Port Method\"), \n             ncol=2)\ngrid.arrange(MMR.Adstock.Plot(optm.LM, paste0(\"ad\", 4:6)) + ggtitle(label = \"LM Method\"), \n             MMR.Adstock.Plot(optm.PR, paste0(\"ad\", 4:6)) + ggtitle(label = \"Port Method\"), \n             ncol=2)\ngrid.arrange(MMR.Adstock.Plot(optm.LM, paste0(\"noise\", 1:3)) + ggtitle(label = \"LM Method\"), \n             MMR.Adstock.Plot(optm.PR, paste0(\"noise\", 1:3)) + ggtitle(label = \"Port Method\"), \n             ncol=2)\n\n# Not all adstocks are created equal\ngrid.arrange(MMR.Adstock.Plot(optm.LM, paste0(\"ad\", 1:3), y=\"RMSE\") + ggtitle(label = \"LM Method\"), \n             MMR.Adstock.Plot(optm.PR, paste0(\"ad\", 1:3), y=\"RMSE\") + ggtitle(label = \"Port Method\"), \n             ncol=2)\ngrid.arrange(MMR.Adstock.Plot(optm.LM, paste0(\"ad\", 4:6), y=\"RMSE\") + ggtitle(label = \"LM Method\"), \n             MMR.Adstock.Plot(optm.PR, paste0(\"ad\", 4:6), y=\"RMSE\") + ggtitle(label = \"Port Method\"), \n             ncol=2)\ngrid.arrange(MMR.Adstock.Plot(optm.LM, paste0(\"noise\", 1:3), y=\"RMSE\") + ggtitle(label = \"LM Method\"), \n             MMR.Adstock.Plot(optm.PR, paste0(\"noise\", 1:3), y=\"RMSE\") + ggtitle(label = \"Port Method\"), \n             ncol=2)\n\ngrid.arrange(MMR.Coef.Plot(optm.LM, paste0(\"ad\", 1:3), type = \"boxplot\") + ggtitle(label = \"LM Method\"), \n             MMR.Coef.Plot(optm.PR, paste0(\"ad\", 1:3), type = \"boxplot\") + ggtitle(label = \"Port Method\"), \n             ncol=2)\ngrid.arrange(MMR.Coef.Plot(optm.LM, paste0(\"ad\", 4:6), type = \"boxplot\") + ggtitle(label = \"LM Method\"), \n             MMR.Coef.Plot(optm.PR, paste0(\"ad\", 4:6), type = \"boxplot\") + ggtitle(label = \"Port Method\"), \n             ncol=2)\ngrid.arrange(MMR.Coef.Plot(optm.LM, paste0(\"noise\", 1:3), type = \"boxplot\") + ggtitle(label = \"LM Method\"), \n             MMR.Coef.Plot(optm.PR, paste0(\"noise\", 1:3), type = \"boxplot\") + ggtitle(label = \"Port Method\"), \n             ncol=2)\n\n\n# Rerun optimize with Levenberg-Marquardt algorithm after narrowing down adstocks\noptm.LM <- MMR.Optim(dep.var     = \"sales\",\n                     indp.vars   = indp.vars,\n                     min.adstock = c(Trend=0, Season=0, ad1=0.1, ad2=0.1, ad3=0.3, ad4=0.2, ad5=0.0, ad6=.8),\n                     max.adstock = c(Trend=0, Season=0, ad1=0.3, ad2=0.3, ad3=0.5, ad4=0.4, ad5=0.2, ad6=.9),\n                     keep.vars   = c(\"Trend\", \"Season\", \"ad1\", \"ad2\", \"ad3\", \"ad4\", \"ad6\"), \n                     data        = ad.data,\n                     algorithm   = \"LM\",\n                     cvTrials    = trials, \n                     indp.try    = function() sample(1:2, 1))\n\n# Predict & plot\noptm.LM.preds <- MMR.Predict(optm.LM, type=\"full\", combine = F)\noptm.LM.pred  <- MMR.Predict(optm.LM, type=\"full\", combine = T)\n\npar(mfrow=c(1,1))\nplot (x=ad.data$week, y=optm.LM.pred , \n      type=\"l\", col=\"green3\"  , lwd=3, \n      main=\"Actual vs. Predicted\", ylab=\"Sales\", xlab=\"Weeks\",\n      ylim=c(min(ad.data$sales, optm.LM.pred), \n             max(ad.data$sales, optm.LM.pred)), \n      frame=F)\nlines(x=ad.data$week, y=ad.data$sales, type=\"l\", col=\"darkblue\", lwd=2)\n\nplot(x=ad.data$week, y=ad.data$sales, \n     type=\"l\", col=\"darkblue\", lwd = 2, \n     main=\"Actual vs. Predicted Models\", ylab=\"Sales\", xlab=\"Weeks\",\n     frame=F)\nfor(i in 1:length(optm.LM)) {\n    if(!is.na(optm.LM.preds[[i]][1]))\n        lines(x=ad.data$week, y=optm.LM.preds[[i]], col=\"green3\")\n}\nlines(x=ad.data$week, y=ad.data$sales, type=\"l\", col=\"darkblue\", lwd = 2)\n\n# Rerun optimize with port algorithm after narrowing down adstocks\noptm.PR <- MMR.Optim(dep.var     = \"sales\",\n                     indp.vars   = indp.vars,\n                     min.adstock = c(Trend=0, Season=0, ad1=0.1, ad2=0.1, ad3=0.3, ad4=0.2, ad5=0.0, ad6=.8),\n                     max.adstock = c(Trend=0, Season=0, ad1=0.3, ad2=0.3, ad3=0.5, ad4=0.4, ad5=0.2, ad6=.9),\n                     keep.vars   = c(\"Trend\", \"Season\", \"ad1\", \"ad2\", \"ad3\", \"ad4\", \"ad6\"), \n                     data        = ad.data,\n                     algorithm   = \"port\",\n                     cvTrials    = trials, \n                     indp.try    = function() sample(1:2, 1))\n\n# Predict & plot\noptm.PR.preds <- MMR.Predict(optm.PR, type=\"full\", combine = F)\noptm.PR.pred  <- MMR.Predict(optm.PR, type=\"full\", combine = T)\n\n\nactual <- \n    ggplot(ad.data, aes(week, sales)) + \n    geom_line(colour=\"darkblue\", alpha=.75, size=1) +     \n    ggtitle(\"Actual vs. Predicted (LM Method)\") + ylab(\"Sales\") + xlab(\"Weeks\") +\n    theme_bw() + \n    theme(plot.title = element_text(size=20, face=\"bold\", vjust=1.5),\n          axis.title.x = element_text(vjust=-0.35))\nfor(i in 1:length(optm.PR)) {\n    if(!is.na(optm.PR.preds[[i]][1]))\n        \n        \nplot(x=ad.data$week, y=ad.data$sales, \n     type=\"l\", col=\"darkblue\", lwd = 2, \n     main=\"Actual vs. Predicted Models\", ylab=\"Sales\", xlab=\"Weeks\",\n     frame=F)\nfor(i in 1:length(optm.PR)) {\n    if(!is.na(optm.PR.preds[[i]][1]))\n        lines(x=ad.data$week, y=optm.PR.preds[[i]], col=\"darkorange\")\n}\nlines(x=ad.data$week, y=ad.data$sales, type=\"l\", col=\"darkblue\", lwd = 2)\n\n# Other work\nMMR.Coef <- View(MMR.Coef(optm.LM))\nsumWeights <- pmax(pmin(1-unlist(MMR.Coef[MMR.Coef$Param==\"MAPE.test\", 2:ncol(MMR.Coef)]),1),0)\noptm.LM.pred2 <- MMR.Predict(optm.LM, type = \"full\", combine=T)\nmean(abs(optm.LM.pred /ad.data$sales - 1))\nmean(abs(optm.LM.pred2/ad.data$sales - 1))\n\noptm.LM.Coef.mean <- apply(optm.LM.Coef[,-1],1,function(x) mean(x, na.rm=T))\nnames(optm.LM.Coef.mean) <- optm.LM.Coef$Param\noptm.LM.Coef.mean\n\nMMR.Coef <- MMR.Coef(optm.PR)\nView(MMR.Coef)\nwhich.max(unlist(MMR.Coef[MMR.Coef$Param==\"MAPE.test\", , drop=T][2:ncol(MMR.Coef)]))\n\n\nView(MMR.Coef(optm.LM))\nView(MMR.Coef(optm.PR))\n\n\n\nas.numeric(colSums(allContrib[,-1]))-optm.LM.pred\n\n\n\n\n\n# MMR.Adstock.Plot\npat  <- \"ad1\"\npat2 <- \"ad2\"\nx <- c(\"Intercept\", \"Trend.coef\", \"ad1.coef\", \"ad1.adstock\", \"ad3.coef\", \"ad3.adstock\")\ny <- x[grepl(\"adstock$\", x)]\ny[grepl(pat , y)]\ny[grepl(pat2, y)]\n\n\nlibrary(reshape2)\nlibrary(ggplot2)\nMMR.Coef <- MMR.Coef(optm.LM)\nAdstock <- melt(MMR.Coef[grepl(\"\\\\.adstock$\", MMR.Coef$Param), ], id.vars=\"Param\", variable.name = \"Trial\", value.name = \"Adstock\")\nMAPE.test <- melt(MMR.Coef[grepl(\"MAPE\\\\.test\", MMR.Coef$Param), ], id.vars=\"Param\", variable.name = \"Trial\", value.name = \"MAPE.test\")\nMAPE.test$MAPA <- pmax(pmin(1-MAPE.test$MAPE.test, 1), 0)\n\nAdstock.MAPE <- merge(Adstock, MAPE.test[,-1], by=\"Trial\", all=T)\nAdstock.MAPE$Param <- sub(\"\\\\.adstock$\", \"\", Adstock.MAPE$Param)\n\nAdstock.MAPE <- Adstock.MAPE[order(Adstock.MAPE$Param),]\nAdstock.MAPE <- Adstock.MAPE[complete.cases(Adstock.MAPE),]\nAdstock.MAPE <- Adstock.MAPE[Adstock.MAPE$Param %in% Param, ]\n\n# Scatter plot\nggplot(Adstock.MAPE, aes(Adstock, MAPA)) + geom_point() + facet_grid(Param ~ .)\n\n\n\nggplot(Adstock.MAPE, aes(MAPA, Adstock)) + geom_boxplot(aes(Adstock)) + geom_point() + coord_flip() + facet_grid(Param ~ .)\n\n\n\n\n\nadstockPlot <- MMR.Adstock.Plot(optm.LM, paste0(\"ad\", 1:3), type=\"scatter\")\nMMR.Adstock.Plot(optm.LM, paste0(\"ad\", 1:5), type=\"boxplot\")\n\noptm.LM.contrib <- MMR.Contributions(optm.LM)\nvarContrib <- rowSums(optm.LM.contrib[,-1], na.rm=T)/300\nnames(varContrib) <- optm.LM.contrib$Param\nvarContrib\n\nhist(unlist(optm.LM.contrib[6, 2:301, drop=T]))\nsum(varContrib)\nsum(optm.LM.pred)\n\n",
    "created" : 1415658657478.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "30645479",
    "id" : "2F7DC4B9",
    "lastKnownWriteTime" : 1415925877,
    "path" : "C:/Users/gmohanna/OneDrive/Work Files/R Libraries/MMR.od/Optimization with MMR.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}