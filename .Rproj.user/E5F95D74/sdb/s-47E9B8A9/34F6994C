{
    "contents" : "# Program      : MMR2 with Real Data\n# ReWritten By : Gabriel Mohanna\n# Date Created : Nov 14, 2014\n#\n# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Code is Poetry >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n# //////////////////////////////////////////////////////////////////////////////////////////////////////\n#\n# ******************************************************************************************************\n# Steps\n# -----\n# (0) Load Libraries & Define Working Directory\n# (1) Load and Preprocess the Data\n# (2) Experiment with Models\n#\n# ******************************************************************************************************\n# Notes\n# ---------------------\n#\n# ******************************************************************************************************\n\n# ******************************************************************************************************\n# (0) Load Libraries & Define Working Directory\n# ******************************************************************************************************\n# Clear Workspace\nrm(list=ls())\n\n# Load Libraries\nlibrary(MMR)\n\n# Define Data Path\nroot       <- \"C:/Users/gmohanna/OneDrive/\"\ndata_path  <- \"Work Files/RC Demo/Data/\"\n\n# Define RData Name\ndata.name <- \"POEM_RC.csv\"\n\n# End Load Libraries & Define Working Directory\n\n\n# ******************************************************************************************************\n# (1) Load and Preprocess the Data\n# ******************************************************************************************************\n# Read Data\nsetwd(paste0(root, data_path))\ndata <- read.csv(data.name)\n\nView(data[, c(1:10, 135)])\nnames(data)\n\n# End Load and Preprocess the Data\n\n\n# ******************************************************************************************************\n# (2) Experiment with Models\n# ******************************************************************************************************\n# Set independent variables\nindp.vars <- c(\"TV.Imp\", \"Digital.Imp\", \"Video.Imp\", \"Bbandimp\", \"instimp\", \"Search.Imp\", \n               \"Facebook.Imp\", \"YouTube.View\", \"wom_raw\",\n               \"Google.Trend\", \n               \"comp4_media\", \n               \"Seas_Fall\", \"dummy_yr\", \"UNRATE\", \n               \"TGivDayWkPr\", \"xmasDayWkPr\",\n               \"RC_FandDPctACV\", \"RC_DOnlyPctACV\", \"LogPPI_new\")\nkeep.vars <- c(\"Seas_Fall\", \"dummy_yr\", \"UNRATE\", \"TGivDayWkPr\", \"xmasDayWkPr\", \"LogPPI_new\")\n\nlength(indp.vars)-length(keep.vars)\n\n# Generate inTrain trials\nset.seed(345)\ntrials <- createInTrainSamples(data, 50, function() runif(1, .65, .75))\n\n# Optimize with Levenberg-Marquardt algorithm\noptm.LM <- MMR.Optim(dep.var     = \"RC_Lbs\", \n                     indp.vars   = indp.vars,\n                     max.adstock = c(comp4_media=0, Seas_Fall=0, dummy_yr=0, UNRATE=0, TGivDayWkPr=0, xmasDayWkPr=0, RC_FandDPctACV=0, RC_DOnlyPctACV=0, LogPPI_new=0),\n                     keep.vars   = keep.vars, \n                     transform   =  c(TV.Imp=\"power\", Digital.Imp=\"power\", Facebook.Imp=\"power\", YouTube.View=\"power\"),\n                     data        = data,\n                     algorithm   = \"LM\",\n                     cvTrials    = trials, \n                     indp.try    = function() sample(10:13, 1))\n\n# Predict & plot\nactual <- data$RC_Lbs\npredicted.mse <- MMR.Predict(optm.LM, newdata=data)\n\n# Overall MAPE\nc(MAPE=mean(abs(MMR.Predict(optm.LM, newdata=data)/actual-1)))\n\nactual.plot <- \n    ggplot(data, aes(Obs, actual)) + \n    geom_line(colour=\"darkblue\", alpha=.75, size=1) +     \n    ggtitle(\"Actual vs. Predicted\") + ylab(\"Sales\") + xlab(\"Weeks\") +\n    theme(plot.title = element_text(size=20, face=\"bold\", vjust=1.5),\n          axis.title.x = element_text(vjust=-0.35))\n\nactual.plot + \n    geom_line(aes(Obs, predicted.mse), colour=\"green3\", alpha=.75, size=1)\n\n# Plot all models\noptm.LM.preds <- MMR.Predict(optm.LM, combine = F)\nplot(x=data$Obs, y=actual, \n     type=\"l\", col=\"darkblue\", lwd = 2, \n     main=\"Actual vs. Predicted Models\", ylab=\"Sales\", xlab=\"Weeks\",\n     frame=F)\nfor(i in 1:length(optm.LM)) {\n    if(!is.na(optm.LM.preds[[i]][1]))\n        lines(x=data$Obs, y=optm.LM.preds[[i]], col=\"green3\")\n}\nlines(x=data$Obs, y=actual, type=\"l\", col=\"darkblue\", lwd = 2)\n\n# View coefficients & adstocks\ngrid.arrange(MMR.Coef.Plot   (optm.LM, c(\"TV.Imp\", \"Digital.Imp\", \"Facebook.Imp\", \"YouTube.View\")), \n             MMR.Adstock.Plot(optm.LM, c(\"TV.Imp\", \"Digital.Imp\", \"Facebook.Imp\", \"YouTube.View\")), \n             ncol=2)\ngrid.arrange(MMR.Coef.Plot   (optm.LM, c(\"TV.Imp\", \"Digital.Imp\", \"Facebook.Imp\", \"YouTube.View\"), y = \"MSE\"), \n             MMR.Adstock.Plot(optm.LM, c(\"TV.Imp\", \"Digital.Imp\", \"Facebook.Imp\", \"YouTube.View\"), y = \"MSE\"), \n             ncol=2)\n\n# View contributions\nMMR.Contributions(optm.LM, combineMethod = \"MSE\" )/sum(MMR.Contributions(optm.LM, combineMethod = \"MSE\" ))\n\n\n",
    "created" : 1416246886609.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2156825304",
    "id" : "34F6994C",
    "lastKnownWriteTime" : 1416259926,
    "path" : "C:/Users/gmohanna/OneDrive/Work Files/RC Demo/Code/RC Demo 2014 11 14 v1.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}